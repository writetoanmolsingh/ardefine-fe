{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anmol/ardefine-fe/pages-sections/LandingPage-Sections/ArtSection.js\";\nimport React from 'react';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"styles/jss/nextjs-material-kit/pages/landingPageSections/workStyle.js\";\nimport CustomDialog from '../../components/CustomDialog/CustomDialog';\nimport FormTextInput from '../../components/FormTextInput/FormTextInput';\nimport { postEnquiries } from \"../../utils/api\";\nconst useStyles = makeStyles(styles);\nexport default function ArtSection({\n  artworks\n}) {\n  const [open, setOpen] = React.useState(false);\n  const [artwork, setArtwork] = React.useState(\"\");\n  const classes = useStyles();\n  const imageClasses = classNames(classes.imgRaised, classes.imgRounded, classes.imgFluid);\n\n  const handleClickOpen = artwork => {\n    setOpen(true);\n    setArtwork(artwork);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const sendEnquiry = values => {\n    let postData = {\n      \"artwork\": artwork,\n      \"name\": values.name,\n      \"email\": values.email,\n      \"enquiry\": values.enquiry\n    };\n    postEnquiries(postData);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [open && /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: open,\n      onClose: handleClose,\n      title: \"Enquiry\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"30px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: '',\n            email: '',\n            enquiry: ''\n          },\n          validationSchema: Yup.object({\n            name: Yup.string().max(50, 'Must be 50 characters or less').required('Required'),\n            email: Yup.string().email('Invalid Email Address').required('Required'),\n            enquiry: Yup.string().max(250, 'Must be 250 characters or less').required('Required')\n          }),\n          onSubmit: (values, {\n            resetForm\n          }) => {\n            setTimeout(() => {\n              sendEnquiry(values);\n              resetForm({\n                name: '',\n                email: '',\n                enquiry: ''\n              });\n            }, 400);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: classes.emptyTitle,\n                children: [\"Enquiry for \", artwork]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n                name: \"name\",\n                label: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n                name: \"email\",\n                label: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormTextInput, {\n                name: \"enquiry\",\n                label: \"Enquiry\",\n                multiline: true,\n                rows: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: \"1rem 0\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                children: \"Send Enquiry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridContainer, {\n      spacing: 2,\n      children: [artworks === null || artworks === void 0 ? void 0 : artworks.map((artwork, index) => {\n        return /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          sm: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            plain: true,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 6,\n              className: classes.itemGrid,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: artwork.image.url,\n                alt: \"...\",\n                className: imageClasses,\n                onClick: () => window.open(artwork.image.url)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardTitle,\n              children: artwork.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.description,\n                children: artwork.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              className: classes.justifyCenter,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                simple: true,\n                color: \"primary\",\n                onClick: () => handleClickOpen(artwork === null || artwork === void 0 ? void 0 : artwork.title),\n                children: \"Enquire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      }), (artworks === null || artworks === void 0 ? void 0 : artworks.length) < 1 && /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.emptyTitle,\n          children: \"No posts available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/anmol/ardefine-fe/pages-sections/LandingPage-Sections/ArtSection.js"],"names":["React","GridContainer","GridItem","Card","CardBody","makeStyles","classNames","Formik","Form","Yup","Button","CardFooter","styles","CustomDialog","FormTextInput","postEnquiries","useStyles","ArtSection","artworks","open","setOpen","useState","artwork","setArtwork","classes","imageClasses","imgRaised","imgRounded","imgFluid","handleClickOpen","handleClose","sendEnquiry","values","postData","name","email","enquiry","padding","object","string","max","required","resetForm","setTimeout","emptyTitle","display","justifyContent","margin","map","index","itemGrid","image","url","window","cardTitle","title","description","justifyCenter","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"styles/jss/nextjs-material-kit/pages/landingPageSections/workStyle.js\";\nimport CustomDialog from '../../components/CustomDialog/CustomDialog';\nimport FormTextInput from '../../components/FormTextInput/FormTextInput';\nimport { postEnquiries } from \"../../utils/api\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function ArtSection({ artworks }) {\n  const [open, setOpen] = React.useState(false);\n  const [artwork, setArtwork] = React.useState(\"\")\n  const classes = useStyles();\n\n  const imageClasses = classNames(\n    classes.imgRaised,\n    classes.imgRounded,\n    classes.imgFluid\n  );\n\n  const handleClickOpen = (artwork) => {\n    setOpen(true);\n    setArtwork(artwork)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const sendEnquiry = (values) => {\n    let postData = {\n      \"artwork\": artwork,\n      \"name\": values.name,\n      \"email\": values.email,\n      \"enquiry\": values.enquiry\n    }\n\n    postEnquiries(postData)\n    setOpen(false)\n  }\n\n\n  return (\n    <>\n      {open &&\n        <CustomDialog open={open} onClose={handleClose} title=\"Enquiry\">\n          <div style={{ padding: \"30px\" }}>\n            <Formik\n              initialValues={{ name: '', email: '', enquiry: '' }}\n              validationSchema={Yup.object({\n                name: Yup.string()\n                  .max(50, 'Must be 50 characters or less')\n                  .required('Required'),\n                email: Yup.string()\n                  .email('Invalid Email Address')\n                  .required('Required'),\n                enquiry: Yup.string()\n                  .max(250, 'Must be 250 characters or less')\n                  .required('Required'),\n              })}\n              onSubmit={(values, { resetForm }) => {\n                setTimeout(() => {\n                  sendEnquiry(values);\n                  resetForm({ name: '', email: '', enquiry: '' });\n                }, 400);\n              }}\n            >\n              <Form>\n                <div>\n                  <h5 className={classes.emptyTitle}>Enquiry for {artwork}</h5>\n                  <FormTextInput name=\"name\" label=\"Name\" />\n                  <FormTextInput name=\"email\" label=\"Email\" />\n                  <FormTextInput name=\"enquiry\" label=\"Enquiry\" multiline rows={6} />\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"1rem 0\" }}>\n                  <Button type=\"submit\" color=\"primary\">Send Enquiry</Button>\n                </div>\n              </Form>\n            </Formik>\n          </div>\n        </CustomDialog>\n      }\n      <GridContainer spacing={2}>\n        {artworks?.map((artwork, index) => {\n          return (\n            <GridItem xs={12} sm={12} md={4} key={index}>\n              <Card plain>\n                <GridItem xs={12} sm={12} md={6} className={classes.itemGrid}>\n                  <img\n                    src={artwork.image.url}\n                    alt=\"...\"\n                    className={imageClasses}\n                    onClick={() => window.open(artwork.image.url)}\n                  />\n                </GridItem>\n                <h4 className={classes.cardTitle}>\n                  {artwork.title}\n                </h4>\n                <CardBody>\n                  <p className={classes.description}>\n                    {artwork.description}\n                  </p>\n                </CardBody>\n                <CardFooter className={classes.justifyCenter}>\n                  <Button simple color=\"primary\" onClick={() => handleClickOpen(artwork?.title)}>Enquire</Button>\n                </CardFooter>\n              </Card>\n            </GridItem>\n          )\n        })}\n        {artworks?.length < 1 && <GridItem><h4 className={classes.emptyTitle}>No posts available.</h4></GridItem>}\n      </GridContainer>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}