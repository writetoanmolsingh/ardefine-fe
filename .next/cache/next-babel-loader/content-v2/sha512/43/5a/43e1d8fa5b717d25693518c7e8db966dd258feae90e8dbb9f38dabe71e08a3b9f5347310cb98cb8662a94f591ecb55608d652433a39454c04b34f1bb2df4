{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/anmol/ardefine-fe/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/anmol/ardefine-fe/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/anmol/ardefine-fe/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/anmol/ardefine-fe/components/FormTextInput/FormTextInput.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { createStyles, makeStyles, TextField } from \"@material-ui/core\";\nimport { useField, useFormikContext } from \"formik\";\n\nvar FormTextInput = function FormTextInput(_ref) {\n  _s();\n\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      otherProps = _objectWithoutProperties(_ref, [\"name\", \"placeholder\"]);\n\n  var useStyles = makeStyles(function (theme) {\n    return createStyles({\n      root: {\n        minWidth: \"100%\",\n        minHeight: \"55px\",\n        color: \"#000000\",\n        \"& .MuiInputBase-root\": {\n          fontSize: \"14px\",\n          borderRadius: \"8px\",\n          color: \"#000000\"\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n          border: \"0px !important\",\n          outline: \"0 !important\"\n        }\n      },\n      emptyItem: {\n        display: \"none\"\n      }\n    });\n  });\n  var classes = useStyles();\n\n  var _useFormikContext = useFormikContext(),\n      setFieldValue = _useFormikContext.setFieldValue;\n\n  var _useField = useField(name),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var handleChange = function handleChange(e) {\n    var value = e.target.value;\n    setFieldValue(name, value);\n  };\n\n  var configSelect = _objectSpread(_objectSpread({}, otherProps), {}, {\n    variant: \"standard\",\n    fullWidth: true,\n    onChange: handleChange\n  });\n\n  if (meta && meta.touched && meta.error) {\n    configSelect.error = true;\n    configSelect.helperText = meta.error;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread(_objectSpread({}, field), configSelect), {}, {\n      className: classes.root\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(FormTextInput, \"J+ogRNVd/OU57rAsLz4kdInT6+k=\", true, function () {\n  return [useFormikContext, useField];\n});\n\n_c = FormTextInput;\nexport default FormTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTextInput\");","map":{"version":3,"sources":["/home/anmol/ardefine-fe/components/FormTextInput/FormTextInput.js"],"names":["React","createStyles","makeStyles","TextField","useField","useFormikContext","FormTextInput","name","placeholder","otherProps","useStyles","theme","root","minWidth","minHeight","color","fontSize","borderRadius","border","outline","emptyItem","display","classes","setFieldValue","field","meta","handleChange","e","value","target","configSelect","variant","fullWidth","onChange","touched","error","helperText"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,SAAnC,QAAoD,mBAApD;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA0C;AAAA;;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AAAA,MAAjBC,UAAiB;;AAC9D,MAAMC,SAAS,GAAGR,UAAU,CAAC,UAACS,KAAD;AAAA,WAC3BV,YAAY,CAAC;AACXW,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,MADN;AAEJC,QAAAA,SAAS,EAAE,MAFP;AAGJC,QAAAA,KAAK,EAAE,SAHH;AAIJ,gCAAwB;AACtBC,UAAAA,QAAQ,EAAE,MADY;AAEtBC,UAAAA,YAAY,EAAE,KAFQ;AAGtBF,UAAAA,KAAK,EAAE;AAHe,SAJpB;AASJ,8CAAsC;AACpCG,UAAAA,MAAM,kBAD8B;AAEpCC,UAAAA,OAAO,EAAE;AAF2B;AATlC,OADK;AAeXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAE;AADA;AAfA,KAAD,CADe;AAAA,GAAD,CAA5B;AAsBA,MAAMC,OAAO,GAAGZ,SAAS,EAAzB;;AAvB8D,0BAwBpCL,gBAAgB,EAxBoB;AAAA,MAwBtDkB,aAxBsD,qBAwBtDA,aAxBsD;;AAAA,kBAyBxCnB,QAAQ,CAACG,IAAD,CAzBgC;AAAA;AAAA,MAyBvDiB,KAzBuD;AAAA,MAyBhDC,IAzBgD;;AA2B9D,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA,QAClBC,KADkB,GACRD,CAAC,CAACE,MADM,CAClBD,KADkB;AAE1BL,IAAAA,aAAa,CAAChB,IAAD,EAAOqB,KAAP,CAAb;AACD,GAHD;;AAKA,MAAME,YAAY,mCACbrB,UADa;AAEhBsB,IAAAA,OAAO,EAAE,UAFO;AAGhBC,IAAAA,SAAS,EAAE,IAHK;AAIhBC,IAAAA,QAAQ,EAAEP;AAJM,IAAlB;;AAOA,MAAID,IAAI,IAAIA,IAAI,CAACS,OAAb,IAAwBT,IAAI,CAACU,KAAjC,EAAwC;AACtCL,IAAAA,YAAY,CAACK,KAAb,GAAqB,IAArB;AACAL,IAAAA,YAAY,CAACM,UAAb,GAA0BX,IAAI,CAACU,KAA/B;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,SAAD,gDACMX,KADN,GAEMM,YAFN;AAGE,MAAA,SAAS,EAAER,OAAO,CAACV;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CArDD;;GAAMN,a;UAwBsBD,gB,EACJD,Q;;;KAzBlBE,a;AAuDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, TextField } from \"@material-ui/core\";\nimport { useField, useFormikContext } from \"formik\";\n\nconst FormTextInput = ({ name, placeholder, ...otherProps }) => {\n  const useStyles = makeStyles((theme) =>\n    createStyles({\n      root: {\n        minWidth: \"100%\",\n        minHeight: \"55px\",\n        color: \"#000000\",\n        \"& .MuiInputBase-root\": {\n          fontSize: \"14px\",\n          borderRadius: \"8px\",\n          color: \"#000000\",\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n          border: `0px !important`,\n          outline: \"0 !important\",\n        },\n      },\n      emptyItem: {\n        display: \"none\",\n      },\n    })\n  );\n\n  const classes = useStyles();\n  const { setFieldValue } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setFieldValue(name, value);\n  };\n\n  const configSelect = {\n    ...otherProps,\n    variant: \"standard\",\n    fullWidth: true,\n    onChange: handleChange,\n  };\n\n  if (meta && meta.touched && meta.error) {\n    configSelect.error = true;\n    configSelect.helperText = meta.error;\n  }\n\n  return (\n    <>\n      <TextField\n        {...field}\n        {...configSelect}\n        className={classes.root}\n      />\n    </>\n  );\n};\n\nexport default FormTextInput;"]},"metadata":{},"sourceType":"module"}